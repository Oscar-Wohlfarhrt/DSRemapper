@page "/logconsole"
@using DSRemapper.DSLogger;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Rendering;
@using Microsoft.JSInterop;

@inject IJSRuntime JS
@implements IDisposable

@{
#pragma warning disable CS8974 //this is for call C# functions from onclick event
}

@functions{
    ElementReference main, logConsole;
    InputCheckbox? autoScrollCheck;

    void ScrollBottom(){
        JS.InvokeVoidAsync("ScrollToBottom", new object[] { main });
    }
    void AddHTMLLog(string html){
        JS.InvokeVoidAsync("AddHTML", new object[] { logConsole, html });
    }
}

<div id="nav">
    <label><InputCheckbox @bind-Value=autoScroll @ref=autoScrollCheck /> Auto scroll</label>
    <InputText @bind-Value=testLog class="darktext" />
    <button onclick="@LogMessage">Add Log</button>
    <button onclick="@LogWarning">Add Warning</button>
    <button onclick="@LogError">Add Error</button>
    <button onclick="@ScrollBottom">Scroll Bottom</button>
</div>
<div @ref=main id="main">
    <div @ref=logConsole id="log-console">
        
    </div>
</div>
<div id="footer">
</div>

@{
}
@code {
    bool autoScroll=true;
    string testLog = "";

    void PrintLog(Logger.LogEntry entry){
        AddHTMLLog($"<{entry.Level}>{entry.Message}</{entry.Level}>");
        if(autoScroll)
            ScrollBottom();
    }

    void LogMessage()
    {
        Logger.Log(testLog);
    }
    void LogWarning()
    {
        Logger.LogWarning(testLog);
    }
    void LogError()
    {
        Logger.LogError(testLog);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {

            foreach (var log in Logger.logs.ToArray())
                PrintLog(log);

            ScrollBottom();
            Logger.OnLog += PrintLog;
        }
    }

    public void Dispose()
    {
        Logger.OnLog -= PrintLog;
    }
}